import { ChainMetadata, ExplorerFamily, ProtocolType } from '../metadata/chainMetadataTypes';
import { ChainMap } from '../types';
/**
 * Common native currencies
 */
export declare const avaxToken: {
    decimals: number;
    name: string;
    symbol: string;
};
export declare const bnbToken: {
    decimals: number;
    name: string;
    symbol: string;
};
export declare const celoToken: {
    decimals: number;
    name: string;
    symbol: string;
};
export declare const etherToken: {
    name: string;
    symbol: string;
    decimals: number;
};
export declare const maticToken: {
    name: string;
    symbol: string;
    decimals: number;
};
export declare const xDaiToken: {
    name: string;
    symbol: string;
    decimals: number;
};
export declare const solToken: {
    name: string;
    symbol: string;
    decimals: number;
};
/**
 * Metadata for Ethereum chains
 */
export declare const alfajores: ChainMetadata;
export declare const arbitrum: ChainMetadata;
export declare const arbitrumgoerli: ChainMetadata;
export declare const avalanche: ChainMetadata;
export declare const bsc: ChainMetadata;
export declare const bsctestnet: ChainMetadata;
export declare const celo: ChainMetadata;
export declare const ethereum: ChainMetadata;
export declare const fuji: ChainMetadata;
export declare const goerli: ChainMetadata;
export declare const sepolia: ChainMetadata;
export declare const moonbasealpha: ChainMetadata;
export declare const moonbeam: ChainMetadata;
export declare const mumbai: ChainMetadata;
export declare const optimism: ChainMetadata;
export declare const optimismgoerli: ChainMetadata;
export declare const polygon: ChainMetadata;
export declare const gnosis: ChainMetadata;
/**
 * Metadata for local test chains
 */
export declare const test1: ChainMetadata;
export declare const test2: ChainMetadata;
export declare const test3: ChainMetadata;
/**
 * Metadata for Sealevel chains
 */
export declare const solana: ChainMetadata;
export declare const solanatestnet: ChainMetadata;
export declare const solanadevnet: ChainMetadata;
export declare const zbctestnet: ChainMetadata;
/**
 * Collection maps
 *
 * NOTE: When adding chains here, consider also adding the
 * corresponding chain logo images in the /sdk/logos/* folders
 */
export declare const chainMetadata: ChainMap<ChainMetadata>;
export declare const chainIdToMetadata: ChainMap<{
    name: string;
    chainId: number;
    protocol: ProtocolType;
    rpcUrls: [{
        http: string;
        webSocket?: string | undefined;
        pagination?: {
            maxBlockRange?: number | undefined;
            minBlockNumber?: number | undefined;
            maxBlockAge?: number | undefined;
        } | undefined;
        retry?: {
            maxRequests: number;
            baseRetryMs: number;
        } | undefined;
    }, ...{
        http: string;
        webSocket?: string | undefined;
        pagination?: {
            maxBlockRange?: number | undefined;
            minBlockNumber?: number | undefined;
            maxBlockAge?: number | undefined;
        } | undefined;
        retry?: {
            maxRequests: number;
            baseRetryMs: number;
        } | undefined;
    }[]];
    domainId?: number | undefined;
    displayName?: string | undefined;
    displayNameShort?: string | undefined;
    logoURI?: string | undefined;
    nativeToken?: {
        symbol: string;
        name: string;
        decimals: number;
    } | undefined;
    blockExplorers?: {
        url: string;
        name: string;
        apiUrl: string;
        apiKey?: string | undefined;
        family?: ExplorerFamily | undefined;
    }[] | undefined;
    blocks?: {
        confirmations: number;
        reorgPeriod?: number | undefined;
        estimateBlockTime?: number | undefined;
    } | undefined;
    transactionOverrides?: {} | undefined;
    gasCurrencyCoinGeckoId?: string | undefined;
    gnosisSafeTransactionServiceUrl?: string | undefined;
    isTestnet?: boolean | undefined;
}>;
export declare const mainnetChainsMetadata: Array<ChainMetadata>;
export declare const testnetChainsMetadata: Array<ChainMetadata>;
//# sourceMappingURL=chainMetadata.d.ts.map