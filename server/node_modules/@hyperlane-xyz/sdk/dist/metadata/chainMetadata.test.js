"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const chai_1 = require("chai");
const chainMetadataTypes_1 = require("./chainMetadataTypes");
const minimalSchema = {
    chainId: 5,
    domainId: 5,
    name: 'goerli',
    protocol: chainMetadataTypes_1.ProtocolType.Ethereum,
    rpcUrls: [{ http: 'https://foobar.com' }],
};
const blockExplorers = [
    {
        name: 'scan',
        url: 'https://foobar.com',
        apiUrl: 'https://api.foobar.com',
    },
];
const blocks = {
    confirmations: 1,
    estimateBlockTime: 10,
};
describe('ChainMetadataSchema', () => {
    it('Accepts valid schemas', () => {
        (0, chai_1.expect)((0, chainMetadataTypes_1.isValidChainMetadata)(minimalSchema)).to.eq(true);
        (0, chai_1.expect)((0, chainMetadataTypes_1.isValidChainMetadata)({
            ...minimalSchema,
            blockExplorers,
        })).to.eq(true);
        (0, chai_1.expect)((0, chainMetadataTypes_1.isValidChainMetadata)({
            ...minimalSchema,
            blockExplorers,
        })).to.eq(true);
        (0, chai_1.expect)((0, chainMetadataTypes_1.isValidChainMetadata)({
            ...minimalSchema,
            blockExplorers,
            blocks,
        })).to.eq(true);
    });
    it('Rejects invalid schemas', () => {
        (0, chai_1.expect)(
        //@ts-ignore
        (0, chainMetadataTypes_1.isValidChainMetadata)({})).to.eq(false);
        //@ts-ignore
        (0, chai_1.expect)((0, chainMetadataTypes_1.isValidChainMetadata)({ ...minimalSchema, chainId: 'id' })).to.eq(false);
        (0, chai_1.expect)((0, chainMetadataTypes_1.isValidChainMetadata)({
            ...minimalSchema,
            blockExplorers: [
                {
                    ...blockExplorers[0],
                    apiUrl: 'not-a-url',
                },
            ],
        })).to.eq(false);
        (0, chai_1.expect)((0, chainMetadataTypes_1.isValidChainMetadata)({
            ...minimalSchema,
            name: 'Invalid name',
        })).to.eq(false);
    });
});
//# sourceMappingURL=chainMetadata.test.js.map