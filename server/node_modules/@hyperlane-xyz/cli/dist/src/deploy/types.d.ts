import type { ERC20Metadata, TokenType } from '@hyperlane-xyz/hyperlane-token';
import type { types } from '@hyperlane-xyz/utils';
export type MinimalTokenMetadata = Omit<ERC20Metadata, 'totalSupply'>;
interface BaseWarpUITokenConfig extends MinimalTokenMetadata {
    type: TokenType.collateral | TokenType.native;
    chainId: number;
    logoURI?: string;
    isNft?: boolean;
}
interface CollateralTokenConfig extends BaseWarpUITokenConfig {
    type: TokenType.collateral;
    address: types.Address;
    hypCollateralAddress: types.Address;
}
interface NativeTokenConfig extends BaseWarpUITokenConfig {
    type: TokenType.native;
    hypNativeAddress: types.Address;
}
export type WarpUITokenConfig = CollateralTokenConfig | NativeTokenConfig;
export {};
//# sourceMappingURL=types.d.ts.map