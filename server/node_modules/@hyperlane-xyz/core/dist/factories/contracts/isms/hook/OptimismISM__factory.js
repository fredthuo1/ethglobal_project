"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OptimismISM__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_l2Messenger",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "NotCrossChainCall",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint8",
                name: "version",
                type: "uint8",
            },
        ],
        name: "Initialized",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "sender",
                type: "bytes32",
            },
            {
                indexed: true,
                internalType: "bytes32",
                name: "messageId",
                type: "bytes32",
            },
        ],
        name: "ReceivedMessage",
        type: "event",
    },
    {
        inputs: [],
        name: "l1Hook",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "moduleType",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_l1Hook",
                type: "address",
            },
        ],
        name: "setOptimismHook",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        name: "verifiedMessageIds",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
            {
                internalType: "bytes",
                name: "_message",
                type: "bytes",
            },
        ],
        name: "verify",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_sender",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "_messageId",
                type: "bytes32",
            },
        ],
        name: "verifyMessageId",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x60a060405234801561001057600080fd5b506040516109d63803806109d683398101604081905261002f916100b5565b6001600160a01b038116608052610050816100a6602090811b61054e17901c565b6100a05760405162461bcd60e51b815260206004820181905260248201527f4f7074696d69736d49534d3a20696e76616c6964204c324d657373656e676572604482015260640160405180910390fd5b506100e5565b6001600160a01b03163b151590565b6000602082840312156100c757600080fd5b81516001600160a01b03811681146100de57600080fd5b9392505050565b6080516108cf6101076000396000818161058301526105e001526108cf6000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c80636465e69f116100505780636465e69f1461011457806386f8011f1461012e578063f7e83aee1461014157600080fd5b8063106ddb18146100775780635161ad8b146100c1578063529fe082146100d6575b600080fd5b6002546100979073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100d46100cf3660046106f6565b610154565b005b6101046100e43660046106f6565b600160209081526000928352604080842090915290825290205460ff1681565b60405190151581526020016100b8565b61011c600681565b60405160ff90911681526020016100b8565b6100d461013c36600461073d565b61028e565b61010461014f3660046107aa565b6104d6565b60025473ffffffffffffffffffffffffffffffffffffffff1661017561056a565b73ffffffffffffffffffffffffffffffffffffffff161461021d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f4f7074696d69736d49534d3a2073656e646572206973206e6f7420746865206860448201527f6f6f6b000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b600081815260016020818152604080842086855290915280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690921790915551829184917ff9347035c6654873e4aa34118c96b53189dc92edcb628c7bad1f9bce9089ecfe9190a35050565b600054610100900460ff16158080156102ae5750600054600160ff909116105b806102c85750303b1580156102c8575060005460ff166001145b610354576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610214565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905580156103b257600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b73ffffffffffffffffffffffffffffffffffffffff821661042f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4f7074696d69736d49534d3a20696e76616c6964206c31486f6f6b00000000006044820152606401610214565b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff841617905580156104d257600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b60008061051884848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061060992505050565b905060006105268585610614565b60009283526001602090815260408085209285529190529091205460ff169695505050505050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b600073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001633146105db576040517f4a74df9200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106047f0000000000000000000000000000000000000000000000000000000000000000610636565b905090565b805160209091012090565b6000610624602960098486610816565b61062d91610840565b90505b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82163314610687576040517f4a74df9200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff16636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106d2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610630919061087c565b6000806040838503121561070957600080fd5b50508035926020909101359150565b73ffffffffffffffffffffffffffffffffffffffff8116811461073a57600080fd5b50565b60006020828403121561074f57600080fd5b813561075a81610718565b9392505050565b60008083601f84011261077357600080fd5b50813567ffffffffffffffff81111561078b57600080fd5b6020830191508360208285010111156107a357600080fd5b9250929050565b600080600080604085870312156107c057600080fd5b843567ffffffffffffffff808211156107d857600080fd5b6107e488838901610761565b909650945060208701359150808211156107fd57600080fd5b5061080a87828801610761565b95989497509550505050565b6000808585111561082657600080fd5b8386111561083357600080fd5b5050820193919092039150565b80356020831015610630577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b1692915050565b60006020828403121561088e57600080fd5b815161075a8161071856fea26469706673582212201e4370eefd6e45f5b52c86b8bd011d9f759990ba4c1fb0c5275c42377a81906c64736f6c63430008110033";
const isSuperArgs = (xs) => xs.length > 1;
class OptimismISM__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(_l2Messenger, overrides) {
        return super.deploy(_l2Messenger, overrides || {});
    }
    getDeployTransaction(_l2Messenger, overrides) {
        return super.getDeployTransaction(_l2Messenger, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.OptimismISM__factory = OptimismISM__factory;
OptimismISM__factory.bytecode = _bytecode;
OptimismISM__factory.abi = _abi;
//# sourceMappingURL=OptimismISM__factory.js.map